// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eshop.DataAccess.Data;

#nullable disable

namespace eshop.DataAccess.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20221130124941_seedingData")]
    partial class seedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eshop.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bilgisayar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ses Sistemleri"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Televizyon"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ev Elektroniği"
                        });
                });

            modelBuilder.Entity("eshop.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Dell XPS Açıklama",
                            ImageUrl = "https://cdn03.ciceksepeti.com/cicek/kcm61759377-1/XL/dell-xps-13-9310-i7-1185g7-vpro-16gb-1tb-ssd-13.4-fhd-windows-10-pro-kcm61759377-1-54e81e24abbf459daed90890fb52d84e.jpg",
                            Name = "Dell XPS 13",
                            Price = 35000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Macbook",
                            ImageUrl = "https://cdn03.ciceksepeti.com/cicek/kcm61759377-1/XL/dell-xps-13-9310-i7-1185g7-vpro-16gb-1tb-ssd-13.4-fhd-windows-10-pro-kcm61759377-1-54e81e24abbf459daed90890fb52d84e.jpg",
                            Name = "Macbook M2",
                            Price = 75000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Sony 5+1",
                            ImageUrl = "https://cdn03.ciceksepeti.com/cicek/kcm61759377-1/XL/dell-xps-13-9310-i7-1185g7-vpro-16gb-1tb-ssd-13.4-fhd-windows-10-pro-kcm61759377-1-54e81e24abbf459daed90890fb52d84e.jpg",
                            Name = "Sony",
                            Price = 3500m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Samsung Bar",
                            ImageUrl = "https://cdn03.ciceksepeti.com/cicek/kcm61759377-1/XL/dell-xps-13-9310-i7-1185g7-vpro-16gb-1tb-ssd-13.4-fhd-windows-10-pro-kcm61759377-1-54e81e24abbf459daed90890fb52d84e.jpg",
                            Name = "BT Bar",
                            Price = 10000m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("eshop.Entities.Product", b =>
                {
                    b.HasOne("eshop.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eshop.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
